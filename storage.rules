rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isValidContentType(contentType) {
      return contentType.matches('video/.*') || 
             contentType.matches('image/.*');
    }
    
    function isValidSize(size) {
      return size < 100 * 1024 * 1024;  // 100MB max for videos
    }

    // Profile pictures
    match /users/{userId}/profile/{fileName} {
      allow read: if true;  // Public profiles
      allow write: if isAuthenticated() 
                  && request.auth.uid == userId
                  && request.resource.contentType.matches('image/.*')
                  && request.resource.size < 5 * 1024 * 1024;  // 5MB max
    }

    // Video uploads
    match /videos/{userId}/{videoId}/{fileName} {
      allow read: if true;  // Public videos
      allow write: if isAuthenticated() 
                  && request.auth.uid == userId
                  && isValidContentType(request.resource.contentType)
                  && isValidSize(request.resource.size);
    }

    // Video thumbnails
    match /thumbnails/{userId}/{videoId}/{fileName} {
      allow read: if true;
      allow write: if isAuthenticated() 
                  && request.auth.uid == userId
                  && request.resource.contentType.matches('image/.*')
                  && request.resource.size < 2 * 1024 * 1024;  // 2MB max
    }

    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
