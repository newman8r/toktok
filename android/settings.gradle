pluginManagement {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_PROJECT)
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.name = 'android'
include ':app'

def flutterProjectRoot = rootProject.projectDir.parentFile
def plugins = new Properties()
def pluginsFile = new File(flutterProjectRoot, '.flutter-plugins')
if (pluginsFile.exists()) {
    pluginsFile.withReader('UTF-8') { reader -> plugins.load(reader) }
}

plugins.each { name, path ->
    def pluginDirectory = flutterProjectRoot.toPath().resolve(path).resolve('android').toFile()
    include ":$name"
    project(":$name").projectDir = pluginDirectory
}

def localProperties = new Properties()
def localPropertiesFile = new File(flutterProjectRoot, 'local.properties')
def flutterSdkPath = null

if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
    flutterSdkPath = localProperties.getProperty('flutter.sdk')
    assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
}

apply from: "${flutterSdkPath}/packages/flutter_tools/gradle/app_plugin_loader.gradle"
